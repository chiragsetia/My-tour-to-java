class ListNode<t> {
	public t data;
	 public ListNode<t> forw;
	 public ListNode<t> backw;
	 public ListNode(t data)
	 {
		 this.data=data;
	 }
}

//pairs
public class solution {

	public static void findPairs(ListNode<Integer> head,int n) {
		ListNode<Integer> newH=head;
        while(newH.forw!=null){
            newH=newH.forw;
        }
        while(head.data<newH.data){
            int v=head.data+newH.data;
            if(v>n){
                newH=newH.backw;
            }else if(v<n){
                head=head.forw;
            }else{
                System.out.println(head.data+" "+newH.data);
                head=head.forw;
                newH=newH.backw;
            }
        }

	}
}

//delete a node in double 
public class solution {

	
	public static ListNode<Integer> deleteNode(ListNode<Integer> head, ListNode<Integer> n) {
		ListNode<Integer> prv=null,temp;
        ListNode<Integer> newH=head;
        while(head!=null){
            if(n==head){
                if(prv==null){
                    temp=head.forw;
                    head.forw.backw=null;
                    head.forw=null;
                    return temp;
                }else if(head.forw==null){
                    head.backw.forw=null;
                    head.backw=null;
                    return newH;
                }else{
                    head.backw.forw=head.forw;
                    head.forw.backw=head.backw;
                    head.forw=head.backw=null;
//                     head.backw=null;
//                     head.forw=null;
                    return newH;
                }
            }
            prv=head;
            head=head.forw;
            
        }
        return newH;
	}
}

