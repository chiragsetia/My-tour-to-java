/*
Given a list of non negative integers, arrange them in such a manner that they form the largest number possible.The result is going to be very large, hence return the result in the form of a string.

Input:
The first line of input consists number of the test cases. The description of T test cases is as follows:
The first line of each test case contains the size of the array, and the second line has the elements of the array.

Output:
In each separate line print the largest number formed by arranging the elements of the array in the form of a string.

Constraints:
1 ≤ T ≤ 100
1 ≤ N ≤ 102
0 ≤ A[i] ≤ 103

Example:
Input:
2
5
3 30 34 5 9
4
54 546 548 60

Output:
9534330
6054854654
*/


/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		int t=Integer.parseInt(br.readLine());
		for(int i=0;i<t;i++){
		    int n=Integer.parseInt(br.readLine());
		    String s=br.readLine();
		    String arr[]=s.split("\\s");
		    Arrays.sort(arr, new Com());
		    s="";
		    for(int j=0;j<n;j++){
		        s+=arr[j];
		    }
		    System.out.println(s);
		}
	}
}
class Com implements Comparator<String>{
    public int compare(String s1,String s2){
            String a=s1+s2;
            String b=s2+s1;
            return -a.compareTo(b);
    }
}
